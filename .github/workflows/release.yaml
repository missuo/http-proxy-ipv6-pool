name: Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Build
        run: cargo build --release
      
      - name: Run tests
        run: cargo test --release
      
      - name: Get the release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      
      - name: Get binary name
        id: get_binary
        run: |
          BINARY_NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].targets[] | select(.kind[] | contains("bin")) | .name')
          echo ::set-output name=BINARY::$BINARY_NAME
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/${{ steps.get_binary.outputs.BINARY }}
          asset_name: ${{ steps.get_binary.outputs.BINARY }}-${{ steps.get_version.outputs.VERSION }}-linux
          asset_content_type: application/octet-stream